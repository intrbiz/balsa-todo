<!DOCTYPE balsa SYSTEM "http://balsa.intrbiz.net/balsa.dtd">
<?RenderLibrary com.intrbiz.balsa?>
<!-- A template view, applied to all views -->
<html xmlns="com.intrbiz.balsa">
	<head>
		<title>Balsa Todolist Metrics</title>
		<style>
			table {
				border-collapse: collapse;
			}
			th, td {
				text-align: left;
				padding: 4px;
				border: 1px solid #2c2c2c;
			}
		</style>
	</head>
	<body>
		<h1>Balsa Todolist Metrics</h1>
		<p>
			This is a (very) simple listing of the metrics available from this demo application.
		</p>
		<h3>Gauges:</h3>
		<table>
			<tr>
				<th>Source</th>
				<th>Name</th>
				<th>Value</th>
			</tr>
			<data-set var="metric" value="#{metrics}">
				<tr rendered="#{metric.isGauge()}">
					<td>#{metric.source}</td>
					<td>#{metric.name}</td>
					<td>#{metric.metric.value}</td>
				</tr>
			</data-set>
		</table>
		<h3>Counters:</h3>
		<table>
			<tr>
				<th>Source</th>
				<th>Name</th>
				<th>Count</th>
			</tr>
			<data-set var="metric" value="#{metrics}">
				<tr rendered="#{metric.isCounter()}">
					<td>#{metric.source}</td>
					<td>#{metric.name}</td>
					<td>#{metric.metric.count}</td>
				</tr>
			</data-set>
		</table>
		<h3>Meters:</h3>
		<table>
			<tr>
				<th>Source</th>
				<th>Name</th>
				<th>Count</th>
				<th>Mean Rate (Hz)</th>
				<th>One Minute Rate (Hz)</th>
				<th>Five Minute Rate (Hz)</th>
				<th>Fifteen Minute Rate (Hz)</th>
			</tr>
			<data-set var="metric" value="#{metrics}">
				<tr rendered="#{metric.isMeter()}">
					<td>#{metric.source}</td>
					<td>#{metric.name}</td>
					<td>#{metric.metric.count}</td>
					<td>#{metric.metric.meanRate}</td>
					<td>#{metric.metric.oneMinuteRate}</td>
					<td>#{metric.metric.fiveMinuteRate}</td>
					<td>#{metric.metric.fifteenMinuteRate}</td>
				</tr>
			</data-set>
		</table>
		<h3>Histograms:</h3>
		<table>
			<tr>
				<th>Source</th>
				<th>Name</th>
				<th>Count</th>
				<th>Min (ms)</th>
				<th>Max (ms)</th>
				<th>Median (ms)</th>
				<th>Mean (ms)</th>
				<th>75th (ms)</th>
				<th>95th (ms)</th>
				<th>98th (ms)</th>
				<th>99th (ms)</th>
				<th>Std Dev (ms)</th>
			</tr>
			<data-set var="metric" value="#{metrics}">
				<tr rendered="#{metric.isHistogram()}">
					<td>#{metric.source}</td>
					<td>#{metric.name}</td>
					<td>#{metric.metric.count}</td>
					<td>#{double(metric.metric.snapshot.min) / 1000000D}</td>
					<td>#{double(metric.metric.snapshot.max) / 1000000D}</td>
					<td>#{metric.metric.snapshot.median / 1000000D}</td>
					<td>#{metric.metric.snapshot.mean / 1000000D}</td>
					<td>#{metric.metric.snapshot.get75thPercentile() / 1000000D}</td>
					<td>#{metric.metric.snapshot.get95thPercentile() / 1000000D}</td>
					<td>#{metric.metric.snapshot.get98thPercentile() / 1000000D}</td>
					<td>#{metric.metric.snapshot.get99thPercentile() / 1000000D}</td>
					<td>#{metric.metric.snapshot.stdDev / 1000000D}</td>
				</tr>
			</data-set>
		</table>
		<h3>Timers:</h3>
		<table>
			<tr>
				<th>Source</th>
				<th>Name</th>
				<th>Count</th>
				<th>Mean Rate (Hz)</th>
				<th>One Minute Rate (Hz)</th>
				<th>Five Minute Rate (Hz)</th>
				<th>Fifteen Minute Rate (Hz)</th>
				<th>Min (ms)</th>
				<th>Max (ms)</th>
				<th>Median (ms)</th>
				<th>Mean (ms)</th>
				<th>75th (ms)</th>
				<th>95th (ms)</th>
				<th>98th (ms)</th>
				<th>99th (ms)</th>
				<th>Std Dev (ms)</th>
			</tr>
			<data-set var="metric" value="#{metrics}">
				<tr rendered="#{metric.isTimer()}">
					<td>#{metric.source}</td>
					<td>#{metric.name}</td>
					<td>#{metric.metric.count}</td>
					<td>#{metric.metric.meanRate}</td>
					<td>#{metric.metric.oneMinuteRate}</td>
					<td>#{metric.metric.fiveMinuteRate}</td>
					<td>#{metric.metric.fifteenMinuteRate}</td>
					<td>#{double(metric.metric.snapshot.min) / 1000000D}</td>
					<td>#{double(metric.metric.snapshot.max) / 1000000D}</td>
					<td>#{metric.metric.snapshot.median / 1000000D}</td>
					<td>#{metric.metric.snapshot.mean / 1000000D}</td>
					<td>#{metric.metric.snapshot.get75thPercentile() / 1000000D}</td>
					<td>#{metric.metric.snapshot.get95thPercentile() / 1000000D}</td>
					<td>#{metric.metric.snapshot.get98thPercentile() / 1000000D}</td>
					<td>#{metric.metric.snapshot.get99thPercentile() / 1000000D}</td>
					<td>#{metric.metric.snapshot.stdDev / 1000000D}</td>
				</tr>
			</data-set>
		</table>
	</body>
</html>